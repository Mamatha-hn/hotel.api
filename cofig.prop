<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
    http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

  <!-- Spring MVC configuration -->
  <mvc:annotation-driven/>

  <!-- Handles HTTP GET requests for /** by efficiently serving up static resources in the ${webappRoot}/ directory -->
  <mvc:resources mapping="/sureroute/**" location="/sureroute/" />

  <!-- scan annotated components with bean name == 'fully qualified class name' -->
  <context:component-scan base-package="com.rakuten" name-generator="com.rakuten.payvault.common.spring.FQCNBeanNameGenerator" />

  <!-- Filter configuration -->
  <mvc:interceptors>
     <mvc:interceptor>
       <mvc:mapping path="/**" />
       <mvc:exclude-mapping path="/pv/Card/V1/Redeem" />
       <mvc:exclude-mapping path="/monitor/sinout/wwwcheck.html" />
       <mvc:exclude-mapping path="/sureroute/**"/>
       <bean class="com.rakuten.payvault.api.interceptor.AccessControlInterceptor" />
     </mvc:interceptor>
     <mvc:interceptor>
       <mvc:mapping path="/pv/Card/V1/Redeem" />
       <bean class="com.rakuten.payvault.api.interceptor.WhiteListInterceptor" />
     </mvc:interceptor>
  </mvc:interceptors>

  <!-- Spring AOP configuration -->
  <aop:aspectj-autoproxy proxy-target-class="true"/>

  <!-- Cache configuration
       currently this project uses google code's Ehcache Spring integration,
       <http://code.google.com/p/ehcache-spring-annotations/>
       because current official Spring's CacheKeyGenerator implementation is bad

       Ehcache configuration file => ehcache.xml
  -->
  <ehcache:annotation-driven cache-manager="ehCacheManager" />
  <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>

  <!-- dataSource Configuration -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreResourceNotFound" value="true" />
    <property name="locations">
    <list>
      <!-- contains default database.properties from classpath -->
      <value>classpath:database.properties</value>
      <!-- above database.properties can be overridden by file in the filesystem (if it exists) -->
      <value>file:/usr/local/payvault/conf/database.properties</value>
    </list>
    </property>
  </bean>
  <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <property name="defaultAutoCommit" value="false" />
    <property name="maxTotal" value="25" />
    <property name="maxIdle" value="25" />
    <property name="maxWaitMillis" value="10000" />
    <property name="validationQuery" value="SELECT 1" />
    <property name="testWhileIdle" value="true" />
    <property name="timeBetweenEvictionRunsMillis" value="5000" />
  </bean>

  <!-- MyBatis configuration -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="configLocation" value="classpath:MyBatisConfig.xml" />
  </bean>
</beans>
